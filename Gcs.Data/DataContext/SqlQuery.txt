CREATE DATABASE GCS_DB  
GO 

USE GCS_DB  
GO  

CREATE TABLE Rol 
(Id int identity(1,1) Primary key ,
Nombre varchar(255),
Activo int default 1,
unique(Nombre)
)


insert into Rol (Nombre) values ('Administrador')	
insert into Rol (Nombre) values ('Usuario')

go

CREATE PROCEDURE [dbo].[SP_BuscarRolUsuario] @IdUser varchar(255), @Resultado varchar(255) OUTPUT
AS
BEGIN
	DECLARE		@Rol varchar(255)
		SELECT	@Rol = R.Nombre 
		FROM	Rol R,
				Usuario U
		WHERE	R.Id = U.IdRol
				and U.IdUser = @IdUser
	
	SET @Resultado = @Rol
	SELECT @Resultado
END

go

CREATE TABLE Usuario 
(Id int identity(1,1) Primary key ,
IdUser varchar(255),
Usuario varchar(255),
Password varchar(255),
Email varchar(255),
Nombre varchar(255),
IdRol int,
ImagenPerfil varchar(255),
FechaCreacion datetime,
FechaVigencia datetime,
Activo int default 1,
unique(Iduser),
unique(Usuario)
)

ALTER TABLE Usuario ADD CONSTRAINT FK_IdRol FOREIGN KEY (IdRol) references Rol(Id)

go

CREATE FUNCTION [dbo].[Fun_BuscarIdUsuario] (@IdUsuario varchar(255))
RETURNS int
AS BEGIN
DECLARE @Id int
	SELECT	@Id = Id
	FROM	Usuario
	WHERE	IdUser = @IdUsuario 
	RETURN @Id
END

go

CREATE FUNCTION Fun_BuscarNombreUsuario(@IdUsuario INT)
RETURNS VARCHAR(255)
AS BEGIN
DECLARE @NombreUsuario VARCHAR(255)
	SELECT	@NombreUsuario = Nombre
	FROM	Usuario
	WHERE	Id = @IdUsuario 
	RETURN @NombreUsuario
END

go

--SELECT CONVERT ( VARCHAR (32), HashBytes ( 'MD5' ,  'User1' ), 2) 
--SELECT CONVERT ( VARCHAR (32), HashBytes ( 'MD5' ,  '123456' ), 2) 

insert into Usuario (IdUser,Usuario,Password,Email,Nombre,IdRol,FechaCreacion, FechaVigencia, ImagenPerfil)values('E3AFED0047B08059D0FADA10F400C1E5','Admin','D035423BDB1989E8DCB8DD478D895A2F','admin@gcs.com.co','Administrador GCS',1, GETDATE(), '01-12-2023 13:52:30.343','Usuario.png')
insert into Usuario (IdUser,Usuario,Password,Email,Nombre,IdRol,FechaCreacion, FechaVigencia, ImagenPerfil)values('6B908B785FDBA05A6446347DAE08D8C5','User1','E10ADC3949BA59ABBE56E057F20F883E','user1@gcs.com.co','Usuario 1',2, GETDATE(), '01-12-2023 13:52:30.343','Usuario.png')

go

CREATE TABLE Log_InicioSesion
(Id int identity(1,1) Primary key ,
IdUser int,
FechaIngreso datetime
)

ALTER TABLE Log_InicioSesion ADD CONSTRAINT FK_IdUsuarioLog_InicioSesion FOREIGN KEY (IdUser) references Usuario(Id)

go

CREATE PROCEDURE [dbo].[SP_IniciarSesion] @Usuario varchar(255), @Password varchar(255), 
@Resultado varchar(max) OUTPUT
AS
BEGIN
DECLARE @ExisteUser INT, @ValidaPassword varchar(255), @IdUser varchar(255),
	@PasswordMd5 varchar(255), @UsuarioMd5 varchar(255), @IdUsuario int, @Vigencia datetime,
	@NombreUser varchar(255), @FechaActual datetime, @Activo Int
	SELECT @UsuarioMd5 = CONVERT ( VARCHAR (32), HashBytes ( 'MD5' ,  @Usuario ), 2)
	SELECT @PasswordMd5 = CONVERT ( VARCHAR (32), HashBytes ( 'MD5' ,  @Password ), 2)
	SELECT @ExisteUser = COUNT(1) FROM Usuario Where IdUser = @UsuarioMd5
	SELECT @ValidaPassword = Password  FROM Usuario WHERE IdUser = @UsuarioMd5
	SELECT @IdUsuario = Id FROM Usuario Where IdUser = @UsuarioMd5
	SELECT @NombreUser = Usuario FROM Usuario WHERE IdUser =  @UsuarioMd5
	SELECT @Vigencia = FechaVigencia FROM Usuario WHERE IdUser = @UsuarioMd5
	SELECT @FechaActual = GETDATE()
	Select @Activo = Activo FROM Usuario WHERE Id = @IdUsuario
	
	IF @ExisteUser = 0
		BEGIN
			SET @Resultado = 'Error*El usuario ingresado no existe'
		END
	ELSE
		BEGIN		
		SELECT @IdUser = IdUser FROM Usuario where IdUser = @UsuarioMd5
			IF @ValidaPassword = @PasswordMd5
				BEGIN
					IF @FechaActual < @Vigencia  
						BEGIN
							IF @Activo = 1
								BEGIN
									INSERT INTO Log_InicioSesion (IdUser,FechaIngreso)VALUES(@IdUsuario, GETDATE())
									SET @Resultado = 'OK*'+@IdUser
								END
							ELSE
								BEGIN
									SET @Resultado = 'Error*El usuario se encuentra inactivo, por favor comuniquese con el administrador de la aplicación'
								END
						END
					ELSE
						BEGIN
							SET @Resultado = 'Error*El usuario '+@NombreUser+' no tiene permisos para ingresar a la aplicación, la fecha limite de ingreso se encuentra vencida. Si desea activar un nuevo periodo de tiempo comuniquese con el administrador de la aplicación.'
						END					
				END
			ELSE
				BEGIN
					SET @Resultado = 'Error*Contraseña incorrecta'
				END
		END
	SELECT @Resultado
END

go

CREATE TABLE Menu
(Id int identity(1,1) Primary key ,
Nombre varchar(255),
Icono varchar(max),
Ruta varchar(max),
Orden int,
Activo int default 1,
unique(Nombre)
)

go


insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Empresa','<i class="bi-building" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Empresa',1)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Empleado','<i class="bi-people-fill" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Empleado',2)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Contratista','<i class="bi-people-fill" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Contratista',3)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Contabilidad','<i class="bi-calculator" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Contabilidad',4)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Cliente','<i class="bi-calculator" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Cliente',5)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Almacen','<i class="bi-shop" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Almacen',6)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Mantenimiento','<i class="bi-tools" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Mantenimiento',7)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Configuración','<i class="bi-gear" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Configuracion',96)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Administración','<i class="bi-key-fill" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Administracion',97)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Usuario','<i class="bi-person-workspace" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo/Usuario',98)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Información','<i class="bi-info-circle-fill" style="font-size: 2rem; color: orange;"></i>','/Modulo/Informacion',99)
insert into Menu (Nombre, Icono, Ruta, Orden) Values ('Salir','<i class="bi-power" style="font-size: 2rem; color: red;"></i>','javascript:CerrarSesion()',100)

go

CREATE TABLE Permiso_Menu
(Id int identity(1,1) Primary key ,
IdMenu int,
IdUsuario int,
Permiso int default 0,
)

ALTER TABLE Permiso_Menu ADD CONSTRAINT FK_IdMenu FOREIGN KEY (IdMenu) references Menu(Id)
ALTER TABLE Permiso_Menu ADD CONSTRAINT FK_IdUsuarioMenu FOREIGN KEY (IdUsuario) references Usuario(Id)

go

insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (1,1,1) -- Empresa
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (2,1,1) -- Empleado
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (3,1,1) -- Contratista
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (4,1,1) -- Contabilidad
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (5,1,1) -- Cliente
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (6,1,1) -- Almacen
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (7,1,1) -- Mantenimiento
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (8,1,1) -- Configuracion
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (9,1,1) -- Administracion
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (10,1,1) -- Usuario
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (11,1,1) -- Informacion
insert into Permiso_Menu (IdMenu, IdUsuario, Permiso) Values (12,1,1) -- Salir

go

CREATE PROCEDURE [dbo].[SP_ListaMenu] @IdUsuario varchar(255)
AS
BEGIN
DECLARE @Id int
SELECT	@Id = dbo.Fun_BuscarIdUsuario(@IdUsuario)
	SELECT	A.Id, 
			A.Icono,
			A.Nombre,
			A.Ruta
	FROM	Menu A,
			Permiso_Menu B
	WHERE	B.IdUsuario = @Id
			and B.Permiso = 1
			and A.Activo =1
			and A.Id = B.IdMenu
			order by Orden asc
END

go

CREATE TABLE SubMenu
(Id int identity(1,1) Primary key ,
IdMenu int,
Nombre varchar(255),
Icono varchar(255),
Ruta varchar(255),
Activo int default 1
)

ALTER TABLE SubMenu ADD CONSTRAINT FK_IdMenuSubmenu FOREIGN KEY (IdMenu) references Menu(Id)

go

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (1, 'Empresa','<i class="bi-building" style="font-size: 2rem; color: #11ABE9;"></i>','/Empresa')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (1, 'Sucursal','<i class="bi-shop" style="font-size: 2rem; color: #11ABE9;"></i>','/Sucursal')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (2, 'Empleado','<i class="bi-person" style="font-size: 2rem; color: #11ABE9;"></i>','/Empleado')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (2, 'Dia Laborado','<i class="bi-calendar-check" style="font-size: 2rem; color: #11ABE9;"></i>','/Dia_Laborado')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (2, 'Hora Extra','<i class="bi-clock" style="font-size: 2rem; color: #11ABE9;"></i>','/Hora_Extra')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (2, 'Permiso Empleado','<i class="bi-clock-history" style="font-size: 2rem; color: #11ABE9;"></i>','/Permiso_Empleado')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (2, 'Préstamo','<i class="bi-cash-coin" style="font-size: 2rem; color: #11ABE9;"></i>','/Prestamo')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (2, 'Nómina Empleado','<i class="bi-calculator" style="font-size: 2rem; color: #11ABE9;"></i>','/Nomina_Empleado')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (3, 'Contratista','<i class="bi-person" style="font-size: 2rem; color: #11ABE9;"></i>','/Contratista')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (3, 'Actividad Realizada','<i class="bi-hammer" style="font-size: 2rem; color: #11ABE9;"></i>','/Actividad_Realizada')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (3, 'Nómina Contratista','<i class="bi-calculator" style="font-size: 2rem; color: #11ABE9;"></i>','/Nomina_Contratista')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (4, 'Factura','<i class="bi-file-earmark-text" style="font-size: 2rem; color: #11ABE9;"></i>','/Factura')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (4, 'Remisión','<i class="bi-file-earmark-text" style="font-size: 2rem; color: #11ABE9;"></i>','/Remision')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (5, 'CLiente','<i class="bi-person-circle" style="font-size: 2rem; color: #11ABE9;"></i>','/Cliente')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (5, 'Cotización','<i class="bi-file-earmark-medical" style="font-size: 2rem; color: #11ABE9;"></i>','/Cotizacion')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (6, 'Compra','<i class="bi-cart4" style="font-size: 2rem; color: #11ABE9;"></i>','/Compra')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (6, 'Salida','<i class="bi-box-arrow-right" style="font-size: 2rem; color: #11ABE9;"></i>','/Salida')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (6, 'Inventario','<i class="bi-graph-up" style="font-size: 2rem; color: #11ABE9;"></i>','/Inventario')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (6, 'Categoría','<i class="bi-grid" style="font-size: 2rem; color: #11ABE9;"></i>','/Categoria')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (6, 'Producto','<i class="bi-box-seam" style="font-size: 2rem; color: #11ABE9;"></i>','/Producto')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (6, 'Proveedor','<i class="bi-truck" style="font-size: 2rem; color: #11ABE9;"></i>','/Proveedor')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (7, 'Maquínaria','<i class="bi-speedometer" style="font-size: 2rem; color: #11ABE9;"></i>','/Maquinaria')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (7, 'Herramienta','<i class="bi-wrench-adjustable" style="font-size: 2rem; color: #11ABE9;"></i>','/Herramienta')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (8, 'País','<i class="bi-geo-alt" style="font-size: 2rem; color: #11ABE9;"></i>','/Pais') --24
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (8, 'Departamento','<i class="bi-geo-fill" style="font-size: 2rem; color: #11ABE9;"></i>','/Departamento') --25
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (8, 'Ciudad','<i class="bi-geo-fill" style="font-size: 2rem; color: #11ABE9;"></i>','/Ciudad') --26
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (8, 'Tipo Actividad','<i class="bi-tools" style="font-size: 2rem; color: #11ABE9;"></i>','/Tipo_Actividad') --27
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (8, 'Tipo Hora Extra','<i class="bi-clock" style="font-size: 2rem; color: #11ABE9;"></i>','/Tipo_Hora_Extra') --28
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (8, 'Tipo Documento','<i class="bi-filetype-doc" style="font-size: 2rem; color: #11ABE9;"></i>','/Tipo_Documento') --29

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (9, 'Usuario','<i class="bi-person" style="font-size: 2rem; color: #11ABE9;"></i>','/Usuario')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (9, 'Permiso Usuario','<i class="bi-lock" style="font-size: 2rem; color: #11ABE9;"></i>','/Permiso_Usuario')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (9, 'Modulo','<i class="bi-file-post" style="font-size: 2rem; color: #11ABE9;"></i>','/Modulo')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (10, 'Información Usuario','<i class="bi-person-badge" style="font-size: 2rem; color: #11ABE9;"></i>','/Informacion_Usuario')

insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (11, 'Contacto','<i class="bi-envelope" style="font-size: 2rem; color: #11ABE9;"></i>','/Contacto')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (11, 'Quienes Somos','<i class="bi-briefcase" style="font-size: 2rem; color: #11ABE9;"></i>','/Quienes_Somos')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (11, 'Licencia de Uso','<i class="bi-card-text" style="font-size: 2rem; color: #11ABE9;"></i>','/Licencia_de_Uso')
insert into SubMenu (IdMenu, Nombre, Icono, Ruta) Values (11, 'Notas de la Versión','<i class="bi-info-circle" style="font-size: 2rem; color: #11ABE9;"></i>','/Notas_de_la_Version')

go

CREATE TABLE Permiso_SubMenu
(Id int identity(1,1) Primary key ,
IdSubMenu int,
IdUsuario int,
Permiso int default 0,
Crear int default 0,
Editar int default 0,
Eliminar int default 0
)

ALTER TABLE Permiso_SubMenu ADD CONSTRAINT FK_IdSubMenu FOREIGN KEY (IdSubMenu) references SubMenu(Id)
ALTER TABLE Permiso_SubMenu ADD CONSTRAINT FK_IdUsuarioSubMenu FOREIGN KEY (IdUsuario) references Usuario(Id)

go

insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (1,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (2,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (3,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (4,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (5,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (6,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (7,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (8,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (9,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (10,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (11,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (12,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (13,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (14,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (15,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (16,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (17,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (18,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (19,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (20,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (21,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (22,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (23,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (24,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (25,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (26,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (27,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (28,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (29,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (30,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (31,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (32,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (33,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (34,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (35,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (36,1,1,1,1,1)
insert into Permiso_SubMenu (IdSubMenu, IdUsuario, Permiso, Crear, Editar, Eliminar) Values (37,1,1,1,1,1)

go

CREATE PROCEDURE [dbo].[SP_ListaSubMenu] @IdUsuario varchar(255), @Modulo varchar(255)
AS
BEGIN
DECLARE @Id int, @IdMenu int
SELECT @IdMenu = Id From Menu WHERE Ruta = @Modulo
SELECT	@Id = dbo.Fun_BuscarIdUsuario(@IdUsuario)
	SELECT	A.Id,	
			A.IdMenu,	
			A.Icono, 
			A.Nombre, 
			A.Ruta
	FROM	SubMenu A,
			Permiso_SubMenu B
	WHERE	B.IdUsuario = @Id
			and B.Permiso = 1
			and A.Activo =1 
			and A.IdMenu = @IdMenu
			and A.Id = B.IdSubMenu
END

GO

CREATE FUNCTION Fun_PermisoUsuario(@Accion varchar(255), @IdUsuario Int, @SubMenu varchar(255))
RETURNS int
AS
BEGIN	
	DECLARE @Resultado Int
	
	IF @Accion ='Crear'
		BEGIN			
			SELECT	@Resultado = P.Crear
			FROM	Usuario U,
					SubMenu S,
					Permiso_SubMenu P
			WHERE	P.IdUsuario = U.Id and 
					U.Id = @IdUsuario and
					S.Ruta = @SubMenu
		END
	ELSE IF @Accion ='Editar'
		BEGIN			
			SELECT	@Resultado = P.Editar
			FROM	Usuario U,
					SubMenu S,
					Permiso_SubMenu P
			WHERE	P.IdUsuario = U.Id and 
					U.Id = @IdUsuario and
					S.Ruta = @SubMenu
		END
	ELSE IF @Accion ='Eliminar'
		BEGIN			
			SELECT	@Resultado = P.Eliminar
			FROM	Usuario U,
					SubMenu S,
					Permiso_SubMenu P
			WHERE	P.IdUsuario = U.Id and 
					U.Id = @IdUsuario and
					S.Ruta = @SubMenu
		END
	RETURN @Resultado
END

GO

CREATE TABLE Pais 
(Id int identity(1,1) Primary key ,
Nombre varchar(255),
Activo int default 1,
CreateBy int,
DateCreate datetime,
unique(Nombre)
)

ALTER TABLE Pais ADD CONSTRAINT FK_IdCreateByPais FOREIGN KEY (CreateBy ) references Usuario(Id)

go

insert into Pais(Nombre, CreateBy,DateCreate)values('Colombia',1,Getdate())

go

CREATE PROCEDURE [dbo].[SP_GridPais]
AS
BEGIN
	SELECT	Id, 
			Nombre, 
			CASE Activo
			WHEN 1 THEN 'Activo'
			ELSE 'Inactivo'
			END as Estado
			FROM Pais
END

GO

CREATE PROCEDURE [dbo].[SP_CrearPais] @IdUser varchar(255), @NombrePais varchar(255), @Resultado varchar(255) OUTPUT
AS
BEGIN
DECLARE @Crear INT, @IdUsuario INT, @NombreUsuario VARCHAR(255), @SubMenu VARCHAR(255)
SELECT @IdUsuario = Id FROM Usuario WHERE IdUser = @IdUser
SELECT @NombreUsuario = Nombre FROM Usuario WHERE IdUser = @IdUser
SET @SubMenu = '/Pais'
SELECT	@Crear = dbo.Fun_PermisoUsuario('Crear',@IdUsuario, @SubMenu)	
		IF @Crear > 0
			BEGIN
				INSERT INTO Pais (Nombre,CreateBy, DateCreate) VALUES (@NombrePais, @IdUsuario, GETDATE()) 
				SET @Resultado = 'OK*Se a creado el País ' + @NombrePais+ ' correctamente'
			END
		ELSE
			BEGIN
				SET @Resultado = 'Error*El usuario '+ @NombreUsuario + ' no tiene permiso para crear país' 
			END
	SELECT @Resultado
END

go

CREATE PROCEDURE SP_CargarDatosPais @IdPais Int
AS
BEGIN
	SELECT Nombre,
	Activo
	FROM Pais
	WHERE Id = @IdPais
END

go

CREATE PROCEDURE [dbo].[SP_GuardarCambiosPais] @IdPais int, @IdUser varchar(255), @NombrePais varchar(255), @Activo int, @Resultado varchar(255) OUTPUT
AS
BEGIN
DECLARE @Modificar INT, @IdUsuario INT, @NombreUsuario VARCHAR(255), @SubMenu VARCHAR(255)
SET @SubMenu = '/Pais'
SELECT @IdUsuario = Id FROM Usuario WHERE IdUser = @IdUser
SELECT @NombreUsuario = Nombre FROM Usuario WHERE IdUser = @IdUser
SELECT @Modificar = dbo.Fun_PermisoUsuario('Editar',@IdUsuario, @SubMenu)	
				IF @Modificar > 0
					BEGIN
						UPDATE Pais SET  Nombre = @NombrePais, Activo = @Activo WHERE Id = @IdPais
					    SET @Resultado = 'OK*Se guardaron los cambios del país ' + @NombrePais+ ' correctamente'
					END
				ELSE
					BEGIN
						SET @Resultado = 'Error*El usuario '+ @NombreUsuario + ' no tiene permiso para realizar cambios al país' 
					END
	SELECT @Resultado
END

go

CREATE PROCEDURE [dbo].[SP_ListaPais]
AS
BEGIN
	SELECT Id, Nombre FROM Pais WHERE Activo = 1
END

go

CREATE FUNCTION Fun_BuscarNombrePais (@IdPais INT)
RETURNS VARCHAR(255)
AS BEGIN
DECLARE @NombrePais VARCHAR(255)
	SELECT	@NombrePais = Nombre
	FROM	Pais
	WHERE	Id = @IdPais 
	RETURN @NombrePais
END

go


CREATE PROCEDURE [dbo].[SP_EliminarPais] @IdUser varchar(255), @IdPais int, @Resultado varchar(255) OUTPUT
AS
BEGIN
DECLARE @Eliminar INT, @IdUsuario INT, @NombreUsuario VARCHAR(255), @validar INT, @NombrePais varchar(255), @SubMenu VARCHAR(255)
SET @SubMenu = '/Pais'
SELECT @IdUsuario = Id FROM Usuario WHERE IdUser = @IdUser
SELECT @NombreUsuario = Nombre FROM Usuario WHERE IdUser = @IdUser
SELECT @NombrePais = Nombre FROM Pais WHERE Id = @IdPais
	SELECT	@Eliminar = dbo.Fun_PermisoUsuario('Eliminar',@IdUsuario, @SubMenu)	
		IF @Eliminar > 0
			BEGIN	
				SELECT @validar = 0 --COUNT(1) FROM Departamento WHERE IdPais = @IdPais
				IF @validar > 0 
					BEGIN
						SET @Resultado = 'Error*El país ' + @NombrePais +' no se puede eliminar, actualmente se encuentra en eso'	
					END
				ELSE
					BEGIN
						DELETE Pais WHERE Id = @IdPais
						SET @Resultado = 'OK*Se elimino el país correctamente'	
					END								
			END
		ELSE
			BEGIN
				SET @Resultado = 'Error*El usuario '+ @NombreUsuario + ' no tiene permiso para eliminar el país' 
			END
	SELECT @Resultado
END

GO

CREATE TABLE Departamento 
(Id int identity(1,1) Primary key ,
IdPais int,
Nombre varchar(255),
Activo int default 1,
CreateBy int,
DateCreate datetime,
unique(Nombre)
)

ALTER TABLE Departamento ADD CONSTRAINT FK_IdCreateByDepto FOREIGN KEY (CreateBy ) references Usuario(Id)
ALTER TABLE Departamento ADD CONSTRAINT FK_IdpaisDepto FOREIGN KEY (IdPais ) references Pais(Id)

go

insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Amazonas',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Antioquia',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Arauca',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Atlántico',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Bogotá',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Bolívar',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Boyacá',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Caldas',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Caquetá',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Casanare',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Cauca',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Cesar',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Chocó',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Córdoba',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Cundinamarca',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Guainía',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Guaviare',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Huila',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'La Guajira',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Magdalena',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Meta',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Nariño',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Norte de Santander',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Putumayo',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Quindío',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Risaralda',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'San Andrés y Providencia',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Santander',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Sucre',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Tolima',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Valle del Cauca',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Vaupés',1,getdate())
insert into Departamento (IdPais, Nombre, CreateBy, DateCreate)values (1,'Vichada',1,getdate())


go

CREATE PROCEDURE [dbo].[SP_GridDepartamento]
AS
BEGIN
	SELECT	Id, 
			Nombre, 
			dbo.Fun_BuscarNombrePais(IdPais) As NombrePais,
			CASE Activo
			WHEN 1 THEN 'Activo'
			ELSE 'Inactivo'
			END as Estado,
			dbo.Fun_BuscarNombreUsuario(CreateBy) As CreateBy,
			CONVERT(varchar(255),DateCreate,20) As FechaCreacion
			FROM Departamento
END

go

CREATE PROCEDURE [dbo].[SP_CrearDepartamento] @IdUser varchar(255), @IdPais int, @NombreDepartamento varchar(255), @Resultado varchar(255) OUTPUT
AS
BEGIN
DECLARE @Crear INT, @IdUsuario INT, @NombreUsuario VARCHAR(255), @SubMenu VARCHAR(255)
SELECT @IdUsuario = Id FROM Usuario WHERE IdUser = @IdUser

SELECT @NombreUsuario = Nombre FROM Usuario WHERE IdUser = @IdUser
SET @SubMenu = '/Departamento'
SELECT	@Crear = dbo.Fun_PermisoUsuario('Crear',@IdUsuario, @SubMenu)	
		IF @Crear > 0
			BEGIN
				INSERT INTO Departamento (IdPais,Nombre,CreateBy, DateCreate) VALUES ( @IdPais, @NombreDepartamento, @IdUsuario, GETDATE()) 
				SET @Resultado = 'OK*Se a creado el Departamento ' + @NombreDepartamento+ ' correctamente'
			END
		ELSE
			BEGIN
				SET @Resultado = 'Error*El usuario '+ @NombreUsuario + ' no tiene permiso para crear departamento' 
			END
	SELECT @Resultado
END

go

CREATE PROCEDURE SP_CargarDatosDepartamento @IdDepartamento Int
AS
BEGIN
	SELECT IdPais,
	Nombre,
	Activo
	FROM Departamento
	WHERE Id = @IdDepartamento
END

go

CREATE PROCEDURE [dbo].[SP_GuardarCambiosDepartamento] @IdPais int, @IdDepartamento int,@IdUser varchar(255), @NombreDepartamento varchar(255), @Activo int, @Resultado varchar(255) OUTPUT
AS
BEGIN
DECLARE @Modificar INT, @IdUsuario INT, @NombreUsuario VARCHAR(255), @SubMenu VARCHAR(255)
SET @SubMenu = '/Departamento'
SELECT @IdUsuario = Id FROM Usuario WHERE IdUser = @IdUser
SELECT @NombreUsuario = Nombre FROM Usuario WHERE IdUser = @IdUser
SELECT @Modificar = dbo.Fun_PermisoUsuario('Editar',@IdUsuario, @SubMenu)	
				IF @Modificar > 0
					BEGIN
						UPDATE Departamento SET IdPais = @IdPais,
												Nombre = @NombreDepartamento, 
												Activo = @Activo 
											WHERE Id = @IdDepartamento
					    SET @Resultado = 'OK*Se guardaron los cambios del departamento ' + @NombreDepartamento+ ' correctamente'
					END
				ELSE
					BEGIN
						SET @Resultado = 'Error*El usuario '+ @NombreUsuario + ' no tiene permiso para realizar cambios al departamento' 
					END
	SELECT @Resultado
END

go

CREATE PROCEDURE [dbo].[SP_ListaDepartamento]
AS
BEGIN
	SELECT Id, Nombre FROM Departamento WHERE Activo = 1
END

go

CREATE FUNCTION Fun_BuscarNombreDepartamento(@IdDepartamento INT)
RETURNS VARCHAR(255)
AS BEGIN
DECLARE @NombreDepartamento VARCHAR(255)
	SELECT	@NombreDepartamento = Nombre
	FROM	Departamento
	WHERE	Id = @IdDepartamento 
	RETURN @NombreDepartamento
END

go

CREATE PROCEDURE [dbo].[SP_EliminarDepartamento] @IdUser varchar(255), @IdDepartamento int, @Resultado varchar(255) OUTPUT
AS
BEGIN
DECLARE @Eliminar INT, @IdUsuario INT, @NombreUsuario VARCHAR(255), @validar INT, @NombreDepartamento varchar(255), @SubMenu VARCHAR(255)
SET @SubMenu = '/Departamento'
SELECT @IdUsuario = Id FROM Usuario WHERE IdUser = @IdUser
SELECT @NombreUsuario = Nombre FROM Usuario WHERE IdUser = @IdUser
SELECT @NombreDepartamento = Nombre FROM Departamento WHERE Id = @IdDepartamento
	SELECT	@Eliminar = dbo.Fun_PermisoUsuario('Eliminar',@IdUsuario, @SubMenu)	
		IF @Eliminar > 0
			BEGIN	
				SELECT @validar = COUNT(1) FROM Ciudad WHERE IdDepartamento = @IdDepartamento
				IF @validar > 0 
					BEGIN
						SET @Resultado = 'Error*El departamento ' + @NombreDepartamento +' no se puede eliminar, actualmente se encuentra en uso'	
					END
				ELSE
					BEGIN
						DELETE Departamento WHERE Id = @IdDepartamento
						SET @Resultado = 'OK*Se Elimino el Departamento correctamente'	
					END								
			END
		ELSE
			BEGIN
				SET @Resultado = 'Error*El usuario '+ @NombreUsuario + ' no tiene permiso para eliminar el departamento' 
			END
	SELECT @Resultado
END

go